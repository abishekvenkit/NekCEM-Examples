% f_format(array,type,nel)
% type: can only be 'F' or 'E'
% print fortran format "G14.6" with array of length "num"
% note: print F14.6 only !, can support E14.6E3

if  sum(double(abs(array)<1E-8) .* double(array~=0) .* double(abs(array>1E8))) > 0
    error('digits is not enough, need to expend the code in f_format! \n')
end

% Basic format
sp3 = '   ';
sp4 = '    ';

fm0 = '0.00000';
fmf = '%7.*f'; 
fmE = '%7.*E';
switch type
    case 'F'
        fm_digit = fmf;
    case 'E'
        fm_digit = fmE;
end


% total: 14, after '.': 6, sc: 4

array =[ 0.52156  233.21  0 1]                        %'// transpose from beginning/ thats done

nDigitTotal = 6;                      %// Total number of characters
mask = nDigitTotal(ones(size(array)));    %// Create mask

nOrder = floor( log10(array) );           %// find order of magnitude of each element in the matrix
mask = mask - nOrder.*(nOrder>0) -1 ; %// adjust mask according to "nOrder" (only for nOrder>0)

temp = [mask(:)';array(:)'];              %// Stack the vectors and weave them

fmt='';
for i=1:length(array)
    if array(i) ==0
        f = fm0;
    else
        f = fm_digit;
    end
    fmt = [fmt sp3 f sp4];
end

% fmt = [sp3 f sp4 sp3 f sp4 sp3 f sp4 '\n'] ;        %// build your line
fmt2 = [E '\t' E '\t' E '\n'];   
out_str = sprintf(fmt,temp);


